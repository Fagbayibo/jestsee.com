---
import Image from '@/components/Image'
import client from '@/lib/client'

import Link from './Link/Link.astro'

interface Props {
  url: string
  class?: string
}

const { url, class: className } = Astro.props

const metadata = await client.api['link-metadata']
  .$get({ query: { url } })
  .then((res) => res.json())

if (!metadata.success) return

const aspectRatio =
  metadata.image?.width && metadata.image?.height
    ? `${metadata.image.width}/${metadata.image.height}`
    : '2/1'
---

<Link
  target='_blank'
  href={url}
  class:list={[
    'not-prose flex h-full max-h-[144px] overflow-clip rounded-xl',
    'border border-zinc-800 bg-zinc-900',
    'max-md:flex-col-reverse',
    className
  ]}
>
  <div class='space-y-2 p-4'>
    <p
      class='line-clamp-2 text-sm font-medium leading-snug tracking-wide text-slate-50'
    >
      {metadata.title}
    </p>
    <p class='line-clamp-2 text-xs leading-normal text-slate-300'>
      {metadata.description}
    </p>
    <div class='flex gap-2 pt-1 text-xs'>
      {
        metadata.faviconUrl && (
          <Image
            class='w-4'
            src={metadata.faviconUrl}
            alt={metadata.title ?? url}
            height={16}
            width={16}
            inferSize
          />
        )
      }
      <p class='text-slate-300/50'>{url}</p>
    </div>
  </div>
  {
    metadata.image && (
      <Image
        wrapperClass='h-full'
        style={{ aspectRatio }}
        src={metadata.image.url}
        alt={metadata.image.alt ?? url}
        inferSize
      />
    )
  }
  <!-- <div class='h-full bg-gray-400' style='aspect-ratio: 2/1;'>
  </div> -->
</Link>
