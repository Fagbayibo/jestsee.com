---
import {
  getImage,
  Image as AstroImage,
  type LocalImageProps,
  type RemoteImageProps
} from 'astro:assets'

type Props = { wrapperClass?: string } & (LocalImageProps | RemoteImageProps)

const { class: className, wrapperClass, ...rest } = Astro.props

const blurryImage = await getImage({
  src: rest.src,
  width: 20
})
---

<div
  style={`background-image: url(${blurryImage.src});`}
  class:list={['blur-load w-fit bg-cover bg-center', wrapperClass]}
>
  <AstroImage
    class:list={['object-cover object-center', className]}
    {...rest}
  />
</div>

<style is:global>
  .blur-load {
    filter: blur(32px);
    transition: filter 300ms ease-in-out;
  }

  .blur-load.image-loaded {
    filter: blur(0);
  }

  .blur-load.image-loaded > img {
    opacity: 1;
  }

  .blur-load > img {
    opacity: 0;
    transition: all 200ms ease-in-out;
  }
</style>

<script>
  // it's safe to put the script here instead of BaseLayout
  // because scripts are bundled and only included once per page
  // source: https://docs.astro.build/en/guides/client-side-scripts/

  document.addEventListener('astro:page-load', () => {
    const blurDivs = document.querySelectorAll('.blur-load')
    blurDivs.forEach((div) => {
      const image = div.querySelector('img')

      function handleLoadedImage() {
        div.classList.add('image-loaded')
      }

      if (image?.complete) {
        return handleLoadedImage()
      }

      image?.addEventListener('load', handleLoadedImage)
    })
  })
</script>
