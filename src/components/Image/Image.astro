---
import {
  getImage,
  Image as AstroImage,
  type LocalImageProps,
  type RemoteImageProps
} from 'astro:assets'

type Props = { wrapperClass?: string; ambientMode?: boolean } & (
  | LocalImageProps
  | RemoteImageProps
)

const { class: className, wrapperClass, ambientMode, ...rest } = Astro.props

const blurryImage = await getImage({
  src: rest.src,
  width: 20
})
---

<div
  class:list={[
    'blur-load w-fit bg-cover bg-top',
    { 'ambient-mode': ambientMode },
    wrapperClass
  ]}
>
  <AstroImage
    class:list={[
      'object-cover object-top',
      'h-[inherit] max-h-[inherit] rounded-[inherit]',
      className
    ]}
    {...rest}
  />
</div>

<style define:vars={{ 'bg-image': `url(${blurryImage.src})` }}>
  .blur-load {
    background-image: var(--bg-image);
    filter: blur(32px);
    transition: filter 300ms ease-in-out;
  }

  .blur-load.image-loaded {
    filter: blur(0);
  }

  .blur-load.image-loaded > img {
    opacity: 1;
  }

  .blur-load > img {
    opacity: 0;
    transition: all 200ms ease-in-out;
  }

  .ambient-mode {
    position: relative;
  }

  .ambient-mode::before {
    position: absolute;
    max-width: 100vw;
    overflow-x: hidden;
    width: 110%;
    height: 110%;

    background-image: var(--bg-image);
    background-size: cover;
    filter: blur(64px);
    opacity: 25%;

    content: '';
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
</style>

<script>
  // it's safe to put the script here instead of BaseLayout
  // because scripts are bundled and only included once per page
  // source: https://docs.astro.build/en/guides/client-side-scripts/

  document.addEventListener('astro:page-load', () => {
    const blurDivs = document.querySelectorAll('.blur-load')
    blurDivs.forEach((div) => {
      const image = div.querySelector('img')

      function handleLoadedImage() {
        div.classList.add('image-loaded')
      }

      if (image?.complete) {
        return handleLoadedImage()
      }

      image?.addEventListener('load', handleLoadedImage)
    })
  })
</script>
