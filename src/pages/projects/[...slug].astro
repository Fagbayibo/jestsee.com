---
import { getCollection } from 'astro:content'

import ContentWrapper from '@/components/ContentWrapper.astro'
import ProjectLayout from '@/layouts/ProjectLayout.astro'
import client from '@/lib/client'

export async function getStaticPaths() {
  const projectEntries = await getCollection('projects')
  return Promise.all(
    projectEntries.map(async (entry) => {
      const { latestCommitUrl, lastUpdatedTime } = await client.api[
        'last-updated-file'
      ]
        .$get({ query: { path: `projects/${entry.slug}.mdx` } })
        .then((res) => res.json())

      return {
        params: {
          slug: entry.slug
        },
        props: {
          entry: {
            ...entry,
            data: {
              ...entry.data,
              updatedDate: new Date(lastUpdatedTime),
              latestCommitUrl
            }
          }
        }
      }
    })
  )
}

const { entry } = Astro.props
const { Content, headings } = await entry.render()
---

<ProjectLayout headings={headings} slug={entry.slug} {...entry.data}>
  <ContentWrapper content={Content} />
</ProjectLayout>
